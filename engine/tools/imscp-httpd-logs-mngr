#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2014 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category    i-MSCP
# @copyright   2010-2014 by i-MSCP | http://i-mscp.net
# @author      Daniel Andreca <sci2tech@gmail.com>
# @link        http://i-mscp.net i-MSCP Home Site
# @license     http://www.gnu.org/licenses/gpl-2.0.html GPL v2

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/..", "$FindBin::Bin/../PerlLib", "$FindBin::Bin/../PerlVendor";

use iMSCP::Debug;
use iMSCP::Boot;
use iMSCP::Database;

# Turn off localisation features to force any command output to be in English
$ENV{'LC_MESSAGES'} = 'C';

# Do not clear screen at end of script
$ENV{'IMSCP_CLEAR_SCREEN'} = 0;

umask(027);

newDebug('imscp-httpd-logs-mngr.log');

silent(1);

sub startUp
{
	iMSCP::Boot->getInstance()->boot({ 'nolock' => 'yes', 'config_readonly' => 'yes' });

	0;
}

sub process
{
	my $rs = 0;

	my $sql = "
		SELECT
			`domain_name`, `domain_name`as `mp`, `domain_admin_id` AS `id`
		FROM
			`domain`
		WHERE
			`domain_status` = 'ok'
		UNION
		SELECT
			`alias_name`, `domain_name`, `domain_admin_id` AS `id`
		FROM
			`domain_aliasses`
		JOIN
			`domain` using(`domain_id`)
		WHERE
			`alias_status` = 'ok'
		UNION
		SELECT
			CONCAT(`subdomain_name`, '.', `domain_name`), `domain_name`, `domain_admin_id` AS `id`
		FROM
			`subdomain`
		JOIN
			`domain` using(`domain_id`)
		WHERE
			`subdomain_status` = 'ok'
		UNION
		SELECT
			CONCAT(`subdomain_alias_name`, '.', `alias_name`), `domain_name`, `domain_admin_id` AS `id`
		FROM
			`subdomain_alias`
		JOIN
			`domain_aliasses` using(`alias_id`)
		JOIN
			`domain` using(`domain_id`)
		WHERE
			`subdomain_alias_status` = 'ok'
	";
	my $rdata = iMSCP::Database->new()->factory()->doQuery('domain_name', $sql);

	if (ref $rdata ne 'HASH') {
		error($rdata);
		require iMSCP::Mail;
		iMSCP::Mail->new()->errmsg($rdata);
		$rs = 1;
	} else {
		require Servers::httpd;
		my $srcFolder = Servers::httpd->factory()->{'config'}->{'APACHE_USERS_LOG_DIR'};

		for(keys %$rdata) {
			my $groupName =
			my $userName = $main::imscpConfig{'SYSTEM_USER_PREFIX'} .
				($main::imscpConfig{'SYSTEM_USER_MIN_UID'} + $rdata->{$_}->{'id'});

			my $destFolder = "$main::imscpConfig{'USER_WEB_DIR'}/$rdata->{$_}->{'mp'}/logs/";
			my $accessSrc = "$srcFolder/$_-access.log";
			my $accessDest = "$destFolder/$_-access.log";
			my $errorSrc = "$srcFolder/$_-error.log";
			my $errorDest = "$destFolder/$_-error.log";

			# Create customer logs directory if doesn't already exists
			$rs = iMSCP::Dir->new('dirname' => $destFolder)->make(
				{ 'user' => $userName, 'group' => $groupName, 'mode' => 0750}
			) unless -d $destFolder;
			return $rs if $rs;

			$rs = iMSCP::File->new('filename' => $accessSrc)->copyFile($accessDest) if -f $accessSrc;
			return $rs if $rs;

			$rs = iMSCP::File->new('filename' => $accessDest)->owner($userName, $groupName) if -f $accessDest;
			return $rs if $rs;

			$rs = iMSCP::File->new('filename' => $accessDest)->mode(0640) if -f $accessDest;
			return $rs if $rs;

			$rs = iMSCP::File->new('filename' => $errorSrc)->copyFile($errorDest) if -f $errorSrc;
			return $rs if $rs;

			$rs = iMSCP::File->new('filename' => $errorDest)->owner($userName, $groupName) if -f $errorDest;
			return $rs if $rs;

			$rs = iMSCP::File->new('filename' => $errorDest)->mode(0640) if -f $errorDest;
			return $rs if $rs;
		}
	}

	$rs;
}

my $rs = 0;

$rs = startUp();
$rs ||= process();

exit $rs;
